{"version":3,"sources":["../../server/controllers/centerController.js"],"names":["Centers","req","res","all","then","status","send","message","center","catch","error","findById","params","id","include","model","as","create","centerName","body","name","city","address","facility","availability","findOne","where","update","err","destroy"],"mappings":"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","file":"centerController.js","sourcesContent":["import { Event, Center } from '../models';\r\n\r\n\r\n/**\r\n * @class Event\r\n *@classdesc class Event\r\n */\r\n\r\nclass Centers {\r\n/**\r\n   * Get all them Center\r\n   * @desc Show a list of all the current Centers.\r\n   * Route: GET: 'api/v1/centers'\r\n   * @param {Object} req request object\r\n   * @param {Object} res response object\r\n   * @returns {void}\r\n   */\r\n\r\n  static getCenter(req, res) {\r\n    Center.all()\r\n      .then(center => res.status(200).send({ message: 'success', center }))\r\n      .catch(error => res.status(200).send(error));\r\n  }\r\n\r\n  /**\r\n   * Get a single Center\r\n   * @desc Show just one center with all events associated with the center.\r\n   * Route: GET: 'api/v1/centers/<centerID>'\r\n   * @param {Object} req request object\r\n   * @param {Object} res response object\r\n   * @returns {void}\r\n   */\r\n\r\n  static getOneCenter(req, res) {\r\n    Center.findById(req.params.id, {\r\n      include: [{\r\n        model: Event,\r\n        as:\r\n        'events'\r\n      }],\r\n    })\r\n      .then((center) => {\r\n        if (center) {\r\n          res.status(200).send({ message: 'Center', center });\r\n        } else {\r\n          res.status(400).send({ message: 'center not found' });\r\n        }\r\n      });\r\n  }\r\n  /**\r\n   * New Center\r\n   * @desc Add a new center.\r\n   * Route: POST: 'api/v1/centers/'\r\n   * @param {Object} req request object\r\n   * @param {Object} res response object\r\n   * @returns {void}\r\n   */\r\n\r\n  static createCenter(req, res) {\r\n    Center.create({\r\n      centerName: req.body.name,\r\n      city: req.body.city,\r\n      address: req.body.address,\r\n      facility: req.body.facility,\r\n      availability: req.body.availability || 'unknow'\r\n    })\r\n      .then(center => res.status(201).send({ message: 'successfully created', center }))\r\n      .catch(error => res.status(400).send(error));\r\n  }\r\n\r\n  /**\r\n   *Edit Center\r\n   * @desc update a centers information.\r\n   * Route: PUT: 'api/v1/centers/<centerID>'\r\n   * @param {Object} req request object\r\n   * @param {Object} res response object\r\n   * @returns {void}\r\n   */\r\n\r\n  static editCenter(req, res) {\r\n    Center.findOne({ where: { id: req.params.id } })\r\n      .then((center) => {\r\n        if (center) {\r\n          center.update({\r\n            centerName: req.body.name,\r\n            city: req.body.city,\r\n            address: req.body.address,\r\n            facility: req.body.facility,\r\n            availability: req.body.availability || 'unknow'\r\n          });\r\n          res.status(200).send({ message: 'updated', center });\r\n        } else {\r\n          res.status(404).send({ message: 'center not found' });\r\n        }\r\n      })\r\n      .catch(err => res.status(400).send(err));\r\n  }\r\n\r\n  /**\r\n   * Remove a Center\r\n   * @desc Delete a center.\r\n   * Route: DELETE: 'api/v1/centers/<centerID>'\r\n   * @param {Object} req request object\r\n   * @param {Object} res response object\r\n   * @returns {void}\r\n   */\r\n\r\n  static deleteCenter(req, res) {\r\n    Center.findOne({ where: { id: req.params.id } })\r\n      .then((center) => {\r\n        if (center) {\r\n          center.destroy();\r\n          res.status(200).send({ message: 'center successfully deleted!' });\r\n        } else {\r\n          res.status(404).send({ message: 'center not found' });\r\n        }\r\n      })\r\n      .catch(err => res.status(400).send(err));\r\n  }\r\n}\r\n\r\nexport default Centers;\r\n"]}