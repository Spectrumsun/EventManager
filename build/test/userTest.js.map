{"version":3,"sources":["../../server/test/userTest.js"],"names":["use","expect","token","describe","it","done","request","post","set","end","err","res","should","have","status","body","message","to","equal","send","loginUser","singupUser1","loginUser1"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,eAAKA,GAAL;;AAEA,IAAMC,SAAS,eAAKA,MAApB;;AAGA,IAAMC,QAAQ,EAAd;;AAEAC,SAAS,eAAT,EAA0B,YAAM;AAC9BC,KAAG,+DAAH,EAAoE,UAACC,IAAD,EAAU;AAC5E,mBAAKC,OAAL,mBACGC,IADH,CACQ,qBADR,EAEGC,GAFH,CAEO,cAFP,EAEuB,kBAFvB,EAGGC,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,UAAIC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAb,aAAOU,IAAII,IAAJ,CAASC,OAAhB,EAAyBC,EAAzB,CAA4BC,KAA5B,CAAkC,cAAlC;AACAb;AACD,KAPH;AAQD,GATD;;AAWAD,KAAG,8DAAH,EAAmE,UAACC,IAAD,EAAU;AAC3E,mBAAKC,OAAL,mBACGC,IADH,CACQ,eADR,EAEGC,GAFH,CAEO,cAFP,EAEuB,kBAFvB,EAGGC,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,UAAIC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAT;AACD,KANH;AAOD,GARD;;AAWAD,KAAG,0CAAH,EAA+C,UAACC,IAAD,EAAU;AACvD,mBAAKC,OAAL,mBACGC,IADH,CACQ,eADR,EAEGY,IAFH,CAEQ,gBAAMC,SAFd,EAGGX,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,UAAIC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAT;AACD,KANH;AAOD,GARD;;AAUAD,KAAG,6CAAH,EAAkD,UAACC,IAAD,EAAU;AAC1D,mBAAKC,OAAL,mBACGC,IADH,CACQ,eADR,EAEGY,IAFH,CAEQ,gBAAMC,SAFd,EAGGX,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,UAAIC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAT;AACD,KANH;AAOD,GARD;;AAWFD,KAAG,8CAAH,EAAmD,UAACC,IAAD,EAAU;AACzD,mBAAKC,OAAL,mBACGC,IADH,CACQ,eADR,EAEGY,IAFH,CAEQ,gBAAME,WAFd,EAGGZ,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,UAAIC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAT;AACD,KANH;AAOD,GARH;;AAUED,KAAG,0CAAH,EAA+C,UAACC,IAAD,EAAU;AACvD,mBAAKC,OAAL,mBACGC,IADH,CACQ,qBADR,EAEGY,IAFH,CAEQ,gBAAMG,UAFd,EAGGb,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,UAAIC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAT;AACD,KANH;AAOD,GARD;;AAUAD,KAAG,iDAAH,EAAsD,UAACC,IAAD,EAAU;AAC9D,mBAAKC,OAAL,mBACGC,IADH,CACQ,eADR,EAEGY,IAFH,CAEQ,gBAAMC,SAFd,EAGGX,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,UAAIC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAT;AACD,KANH;AAOD,GARD;AAWD,CA3ED","file":"userTest.js","sourcesContent":["import chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport faker from './faker';\r\nimport server from '../server';\r\nimport models from '../models';\r\n\r\nchai.use(chaiHttp);\r\n\r\nconst expect = chai.expect;\r\n\r\n\r\nconst token = '';\r\n\r\ndescribe('Event Manager', () => {\r\n  it('responds with status 400 if input fields are empty for signup', (done) => {\r\n    chai.request(server)\r\n      .post('/api/v1/users/login')\r\n      .set('Content-Type', 'application/json')\r\n      .end((err, res) => {\r\n        res.should.have.status(400);\r\n        expect(res.body.message).to.equal('login errors');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('responds with status 400 if input fields are empty for login', (done) => {\r\n    chai.request(server)\r\n      .post('/api/v1/users')\r\n      .set('Content-Type', 'application/json')\r\n      .end((err, res) => {\r\n        res.should.have.status(400);\r\n        done();\r\n      });\r\n  });\r\n\r\n\r\n  it('responds with status 400 for wrong email', (done) => {\r\n    chai.request(server)\r\n      .post('/api/v1/users')\r\n      .send(faker.loginUser)\r\n      .end((err, res) => {\r\n        res.should.have.status(400);\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('responds with status 400 for wrong password', (done) => {\r\n    chai.request(server)\r\n      .post('/api/v1/users')\r\n      .send(faker.loginUser)\r\n      .end((err, res) => {\r\n        res.should.have.status(400);\r\n        done();\r\n      });\r\n  });\r\n\r\n\r\nit('responds with status 201 to sign up new user', (done) => {\r\n    chai.request(server)\r\n      .post('/api/v1/users')\r\n      .send(faker.singupUser1)\r\n      .end((err, res) => {\r\n        res.should.have.status(201);\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('responds with status 200 to login a user', (done) => {\r\n    chai.request(server)\r\n      .post('/api/v1/users/login')\r\n      .send(faker.loginUser1)\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('responds with status 400 if email already exist', (done) => {\r\n    chai.request(server)\r\n      .post('/api/v1/users')\r\n      .send(faker.loginUser)\r\n      .end((err, res) => {\r\n        res.should.have.status(400);\r\n        done();\r\n      });\r\n  });\r\n  \r\n  \r\n});\r\n"]}