{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Event Manager API",
    "description": "An Application to manage event and book centers API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:8000",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    },
    {
      "name": "Events",
      "description": " API for events in the system"
    },
    {
       "name": "Centers",
      "description": " API for centers in the system"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
         "summary": "Create new user",
        "description": "Create new user",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
  "/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Login an existing user",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Login an existing user",
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User login",
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        }
      }
    },
  "/events": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Add new event",
        "description": "Add new event",
        "parameters": [
          {
            "name": "event",
            "in": "body",
            "description": "Add a new event",
            "schema": {
              "$ref": "#/definitions/Events"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New event is added",
            "schema": {
              "$ref": "#/definitions/Events"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get all Events",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Events"
            }
          }
        }
      }
    },
    "/events/{eventId}": {
      "parameters": [
        {
          "name": "eventId",
          "in": "path",
          "required": true,
          "description": "ID of event that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get event with given ID",
        "responses": {
          "200": {
            "description": "Event is found",
            "schema": {
              "$ref": "#/definitions/Events"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Event with given ID",
        "tags": [
          "Events"
        ],
        "responses": {
          "200": {
            "description": "Event is deleted",
            "schema": {
              "$ref": "#/definitions/Events"
            }
          }
        }
      },
      "put": {
        "summary": "Update Event with give ID",
        "tags": [
          "Events"
        ],
        "parameters": [
          {
            "name": "event",
            "in": "body",
            "description": "Event with new values of properties",
            "schema": {
              "$ref": "#/definitions/Events"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event is updated",
            "schema": {
              "$ref": "#/definitions/Events"
            }
          }
        }
      }
    },
     "/centers": {
      "post": {
        "tags": [
          "Centers"
        ],
        "summary": "Add new event",
        "description": "Admin add new center",
        "parameters": [
          {
            "name": "center",
            "in": "body",
            "description": "Center that we want to add",
            "schema": {
              "$ref": "#/definitions/Centers"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New center is created",
            "schema": {
              "$ref": "#/definitions/Centers"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Centers"
        ],
        "summary": "Get all centers in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Centers"
            }
          }
        }
      }
    },
    "/centes/{centerId}": {
      "parameters": [
        {
          "name": "centerId",
          "in": "path",
          "required": true,
          "description": "ID of center that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Centers"
        ],
        "summary": "Get center with given ID",
        "responses": {
          "200": {
            "description": "Center is found",
            "schema": {
              "$ref": "#/definitions/Centers"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete center with given ID",
        "tags": [
          "Centers"
        ],
        "responses": {
          "200": {
            "description": "Center is deleted",
            "schema": {
              "$ref": "#/definitions/Centers"
            }
          }
        }
      },
      "put": {
        "summary": "Update center with give ID",
        "tags": [
          "Centers"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Cener with new values of properties",
            "schema": {
              "$ref": "#/definitions/Centers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Center is updated",
            "schema": {
              "$ref": "#/definitions/Centers"
            }
          }
        }
      }
    }
  },
  



  "definitions": {
    "User": {
      "required": [
        "email",
        "password",
        "_id"
      ],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "fullname": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "confirmPassword": {
            "type": "string"
        }
      }
    },
    "UserLogin": {
         "required": [
        "email",
        "password",
        "_id"
      ],
       "properties": {
        "_id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
           "type":
           "string"
        }
      }
    },
      "Event": {
        "required": [
            "email",
            "password",
            "_id"
      ],
       "properties": {
           "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "eventName": {
          "type": "string",
          "uniqueItems": true
        },
        "eventdate": {
          "type": "string"
        },
        "purpose": {
            "type": "string"
        },
        "time": {
          "type": "string"
        },
         "centerId": {
          "type": "string"
            }
        }
      },
      "Center": {
          "required": [
            "email",
            "password",
            "_id"
      ],
       "properties": {
           "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "centerName": {
          "type": "string",
          "uniqueItems": true
        },
        "city": {
          "type": "string"
        },
        "adddress": {
          "type": "string"
        },
        "availability": {
          "type": "string"
        },
        "facility": {
            "type": "array"
        }   

    }

    },
    "Users": {
      "type": "array",
      "$ref": "#/definitions/User"
    },
    "UsersLogin": {
        "type": "array",
      "$ref": "#/definitions/UserLogin"
    },
    "Events": {
    "type": "array",
      "$ref": "#/definitions/Event"

    },
    "Centers": {
        "type": "array",
      "$ref": "#/definitions/Center"
    }
  }
}