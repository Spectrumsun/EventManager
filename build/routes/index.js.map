{"version":3,"sources":["../../server/routes/index.js"],"names":["router","Router","config","get","req","res","status","send","message","post","validateSigup","signup","validatelogin","login","verifyToken","getEvent","getOneEvent","validateCreateEvent","checkDate","createEvent","put","validateEventOwner","editEvent","delete","deleteEvent","getCenter","getOneCenter","validateCreateCenter","validateAdmin","createCenter","editCenter","deleteCenter"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAAS,kBAAQC,MAAR,EAAf;;AAEA,iBAAOC,MAAP;;AAGA;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC5BA,MAAIC,MAAJ,CAAW,GAAX,EACGC,IADH,CACQ,EAAEC,SAAS,0BAAX,EADR;AAED,CAHD;;AAMA;;AAEA;AACAR,OAAOS,IAAP,CACE,QADF,EAEE,sBAAUC,aAFZ,EAGE,4BAAeC,MAHjB;;AAMA;AACAX,OAAOS,IAAP,CACE,cADF,EAEE,sBAAUG,aAFZ,EAGE,4BAAeC,KAHjB;;AAMA;AACAb,OAAOG,GAAP,CACE,SADF,EAEE,iBAAKW,WAFP,EAGE,6BAAgBC,QAHlB;;AAMA;AACAf,OAAOG,GAAP,CACE,aADF,EAEE,iBAAKW,WAFP,EAGE,6BAAgBE,WAHlB;;AAMA;AACAhB,OAAOS,IAAP,CACE,SADF,EACa,iBAAKK,WADlB,EAEE,sBAAUG,mBAFZ,EAGE,sBAAUC,SAHZ,EAIE,6BAAgBC,WAJlB;;AAOA;AACAnB,OAAOoB,GAAP,CACE,aADF,EACiB,iBAAKN,WADtB,EAEE,sBAAUG,mBAFZ,EAGE,sBAAUC,SAHZ,EAIE,sBAAUG,kBAJZ,EAKE,6BAAgBC,SALlB;;AAQA;AACAtB,OAAOuB,MAAP,CACE,aADF,EAEE,iBAAKT,WAFP,EAGE,sBAAUO,kBAHZ,EAIE,6BAAgBG,WAJlB;;AAQA;AACAxB,OAAOG,GAAP,CACE,UADF,EAEE,8BAAiBsB,SAFnB;;AAKA;AACAzB,OAAOG,GAAP,CACE,cADF,EAEE,iBAAKW,WAFP,EAGE,8BAAiBY,YAHnB;;AAMA;AACA1B,OAAOS,IAAP,CACE,UADF,EAEE,iBAAKK,WAFP,EAGE,sBAAUa,oBAHZ,EAIE,sBAAUC,aAJZ,EAKE,8BAAiBC,YALnB;;AAQA;AACA7B,OAAOoB,GAAP,CACE,cADF,EAEE,iBAAKN,WAFP,EAGE,sBAAUa,oBAHZ,EAIE,sBAAUC,aAJZ,EAKE,8BAAiBE,UALnB;;AAQA;AACA9B,OAAOuB,MAAP,CACE,cADF,EAEE,iBAAKT,WAFP,EAGE,sBAAUc,aAHZ,EAIE,8BAAiBG,YAJnB;;kBAQe/B,M","file":"index.js","sourcesContent":["import express from 'express';\r\nimport swaggerJSDoc from 'swagger-jsdoc';\r\nimport dotenv from 'dotenv';\r\nimport { validator, auth } from '../middleware';\r\nimport { eventController, centerController, userController } from '../controllers';\r\n\r\nconst router = express.Router();\r\n\r\ndotenv.config();\r\n\r\n\r\n/* GET Home Page. */\r\n\r\nrouter.get('/', (req, res) => {\r\n  res.status(200)\r\n    .send({ message: 'welcome to Event Manager' });\r\n});\r\n\r\n\r\n/* All API Routes */\r\n\r\n// POST Add a new user\r\nrouter.post(\r\n  '/users',\r\n  validator.validateSigup,\r\n  userController.signup\r\n);\r\n\r\n// POST Login an existing user\r\nrouter.post(\r\n  '/users/login',\r\n  validator.validatelogin,\r\n  userController.login\r\n);\r\n\r\n// GET Events\r\nrouter.get(\r\n  '/events',\r\n  auth.verifyToken,\r\n  eventController.getEvent\r\n);\r\n\r\n// GET One Event with the Center for the event\r\nrouter.get(\r\n  '/events/:id',\r\n  auth.verifyToken,\r\n  eventController.getOneEvent\r\n);\r\n\r\n// POST  Add a new Event\r\nrouter.post(\r\n  '/events', auth.verifyToken,\r\n  validator.validateCreateEvent,\r\n  validator.checkDate,\r\n  eventController.createEvent\r\n);\r\n\r\n// PUT Edit event\r\nrouter.put(\r\n  '/events/:id', auth.verifyToken,\r\n  validator.validateCreateEvent,\r\n  validator.checkDate,\r\n  validator.validateEventOwner,\r\n  eventController.editEvent\r\n);\r\n\r\n// DELETE remove event\r\nrouter.delete(\r\n  '/events/:id',\r\n  auth.verifyToken,\r\n  validator.validateEventOwner,\r\n  eventController.deleteEvent\r\n);\r\n\r\n\r\n// GET All Centers\r\nrouter.get(\r\n  '/centers',\r\n  centerController.getCenter\r\n);\r\n\r\n// GET a single  Center with events added to the center\r\nrouter.get(\r\n  '/centers/:id',\r\n  auth.verifyToken,\r\n  centerController.getOneCenter\r\n);\r\n\r\n// POST  Add a new center\r\nrouter.post(\r\n  '/centers',\r\n  auth.verifyToken,\r\n  validator.validateCreateCenter,\r\n  validator.validateAdmin,\r\n  centerController.createCenter\r\n);\r\n\r\n// PUT edit a center\r\nrouter.put(\r\n  '/centers/:id',\r\n  auth.verifyToken,\r\n  validator.validateCreateCenter,\r\n  validator.validateAdmin,\r\n  centerController.editCenter\r\n);\r\n\r\n// DELETE  remove a Center\r\nrouter.delete(\r\n  '/centers/:id',\r\n  auth.verifyToken,\r\n  validator.validateAdmin,\r\n  centerController.deleteCenter\r\n);\r\n\r\n\r\nexport default router;\r\n"]}