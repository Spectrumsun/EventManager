{"version":3,"sources":["../../server/models/index.js"],"names":["basename","module","filename","env","process","NODE_ENV","config","db","sequelize","use_env_variable","database","username","password","readdirSync","__dirname","filter","file","indexOf","slice","forEach","model","import","join","name","Object","keys","modelName","associate","Sequelize","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,WAAW,eAAKA,QAAL,CAAcC,OAAOC,QAArB,CAAjB;AACA,IAAMC,MAAMC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;AACA,IAAMC,SAAS,iBAAWH,GAAX,CAAf;AACA,IAAMI,KAAK,EAAX;;AAEA,IAAIC,kBAAJ;AACA,IAAIF,OAAOG,gBAAX,EAA6B;AAC3BD,cAAY,wBAAcJ,QAAQD,GAAR,CAAYG,OAAOG,gBAAnB,CAAd,CAAZ;AACD,CAFD,MAEO;AACPD,cAAY,wBAAcF,OAAOI,QAArB,EAA+BJ,OAAOK,QAAtC,EAAgDL,OAAOM,QAAvD,EAAiEN,MAAjE,CAAZ;AACC;;AAED,aACGO,WADH,CACeC,SADf,EAEGC,MAFH,CAEU;AAAA,SACLC,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IACCD,SAAShB,QADV,IAECgB,KAAKE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAHd;AAAA,CAFV,EAMGC,OANH,CAMW,UAACH,IAAD,EAAU;AACjB,MAAMI,QAAQZ,UAAUa,MAAV,CAAiB,eAAKC,IAAL,CAAUR,SAAV,EAAqBE,IAArB,CAAjB,CAAd;AACAT,KAAGa,MAAMG,IAAT,IAAiBH,KAAjB;AACD,CATH;;AAWAI,OAAOC,IAAP,CAAYlB,EAAZ,EAAgBY,OAAhB,CAAwB,UAACO,SAAD,EAAe;AACrC,MAAInB,GAAGmB,SAAH,EAAcC,SAAlB,EAA6B;AAC3BpB,OAAGmB,SAAH,EAAcC,SAAd,CAAwBpB,EAAxB;AACD;AACF,CAJD;;AAMAA,GAAGC,SAAH,GAAeA,SAAf;AACAD,GAAGqB,SAAH;;AAEA3B,OAAO4B,OAAP,GAAiBtB,EAAjB","file":"index.js","sourcesContent":["import fs from 'fs';\r\nimport path from 'path';\r\nimport Sequelize from 'sequelize';\r\nimport configfile from '../config/config';\r\n\r\nconst basename = path.basename(module.filename);\r\nconst env = process.env.NODE_ENV || 'development';\r\nconst config = configfile[env];\r\nconst db = {};\r\n\r\nlet sequelize;\r\nif (config.use_env_variable) {\r\n  sequelize = new Sequelize(process.env[config.use_env_variable],);\r\n} else {\r\nsequelize = new Sequelize(config.database, config.username, config.password, config);\r\n}\r\n\r\nfs\r\n  .readdirSync(__dirname)\r\n  .filter(file =>\r\n    (file.indexOf('.') !== 0) &&\r\n    (file !== basename) &&\r\n    (file.slice(-3) === '.js'))\r\n  .forEach((file) => {\r\n    const model = sequelize.import(path.join(__dirname, file));\r\n    db[model.name] = model;\r\n  });\r\n\r\nObject.keys(db).forEach((modelName) => {\r\n  if (db[modelName].associate) {\r\n    db[modelName].associate(db);\r\n  }\r\n});\r\n\r\ndb.sequelize = sequelize;\r\ndb.Sequelize = Sequelize;\r\n\r\nmodule.exports = db;\r\n"]}